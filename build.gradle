buildscript {
    repositories {
        jcenter()
        maven { url = "https://www.dimdev.org/maven" }
        maven { url 'http://repo.spongepowered.org/maven' }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'org.dimdev:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.tweaker-client'
apply plugin: 'java'
apply plugin: 'org.spongepowered.mixin'

version = "1.13-rift-1.12"
group= "com.reddit.user.koppeh.flamingo" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Flamingo"

minecraft {
    version = "1.13"
    mappings = "snapshot_5"

    runDir = "run"    
    tweakClass = 'org.dimdev.riftloader.launch.RiftLoaderClientTweaker'
}

repositories {
    mavenCentral()
    maven { url 'https://www.dimdev.org/maven/' }
}

dependencies {
    implementation 'org.dimdev:rift:1.0.3-45:dev'
}

mixin {
    defaultObfuscationEnv notch
    add sourceSets.main, 'mixins.flamingo.refmap.json'
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

//For Building

def libDir = './build/libs'

task deobfJar(type: Jar) {
    description = 'Creates a jar file containing the non-obfuscated class files'
    classifier = 'deobf'
    destinationDir = file(libDir)
    from sourceSets.main.output.classesDir
    from sourceSets.main.output.resourcesDir
}

task makeJars << {
    description = 'Creates the mod files'
}

makeJars.dependsOn clean, build, deobfJar
build.shouldRunAfter clean
deobfJar.shouldRunAfter build
